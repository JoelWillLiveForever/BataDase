<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BataDase.Core">

    <Style TargetType="{x:Type TextBox}" 
           xmlns:sys="clr-namespace:System;assembly=mscorlib"
           x:Key="Style_TextBox">
        
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Логин" Foreground="LightGray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        
        <Style.Setters>
            <Setter Property="Height" Value="28"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Color_OnBackground_OnSurface}"/>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}"
           x:Key="Style_Dialog_TextBox">
        <Style.Setters>
            <Setter Property="HorizontalAlignment" 
                            Value="Stretch"/>
            <Setter Property="VerticalAlignment" 
                            Value="Center"/>
            <Setter Property="FontSize" 
                            Value="16"/>
            <Setter Property="MinWidth" 
                            Value="150"/>
            <Setter Property="MinHeight" 
                            Value="30"/>
            <Setter Property="Width" 
                            Value="Auto"/>
            <Setter Property="Padding" 
                            Value="1"/>
            <Setter Property="FontFamily" 
                            Value="{DynamicResource Font_MyLocalFont}"/>
            <Setter Property="BorderThickness" 
                            Value="1"/>
            <Setter Property="SelectionBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_Primary_Light}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="CaretBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_Primary_Light}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_Primary_Dark}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                             Opacity="0.12"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                             Opacity="0.38"/>
                </Setter.Value>
            </Setter>
            <Setter Property="MaxLines"
                            Value="1"/>
            <Setter Property="MaxLength" 
                            Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                                  Focusable="False" 
                                                  HorizontalScrollBarVisibility="Hidden" 
                                                  VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                             Value="True">
                                <Setter Property="BorderBrush"
                                                TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Color_Primary}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" 
                                             Value="True">
                                <Setter Property="BorderBrush"
                                                TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Color_Primary_Light}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                             Value="False">
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                                 Opacity="0.38"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsFocused" 
                             Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                                 Opacity="0.87"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
                             Value="False">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                                 Opacity="0.38"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type PasswordBox}"
           x:Key="Style_PasswordBox">
        <Style.Setters>
            <Setter Property="Background"
                    Value="Transparent"/>
            <Setter Property="local:WaterMarkTextHelper.IsMonitoring"
                    Value="True"/>
            <Setter Property="local:WaterMarkTextHelper.WatermarkText"
                    Value="{DynamicResource Text_Password}"/>
            <Setter Property="HorizontalAlignment" 
                            Value="Stretch"/>
            <Setter Property="VerticalAlignment" 
                            Value="Center"/>
            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
            <Setter Property="FontSize" 
                            Value="16"/>
            <Setter Property="MinWidth" 
                            Value="150"/>
            <Setter Property="MinHeight" 
                            Value="30"/>
            <Setter Property="Width" 
                            Value="Auto"/>
            <Setter Property="Padding" 
                            Value="1"/>
            <Setter Property="FontFamily" 
                            Value="{DynamicResource Font_MyLocalFont}"/>
            <Setter Property="BorderThickness" 
                            Value="1"/>
            <Setter Property="SelectionBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_Primary_Light}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="CaretBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_Primary_Light}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_Primary_Dark}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                             Opacity="0.38"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                                  Focusable="False" 
                                                  HorizontalScrollBarVisibility="Hidden" 
                                                  VerticalScrollBarVisibility="Hidden"/>
                                <Label x:Name="Message"
                                       Content="{TemplateBinding local:WaterMarkTextHelper.WatermarkText}"
                                       FontFamily="{DynamicResource Font_MyLocalFont}"
                                       FontSize="{TemplateBinding FontSize}">
                                    <Label.Style>
                                        <Style TargetType="{x:Type Label}">
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                                                     Opacity="0.60"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                             Value="True">
                                <Setter Property="BorderBrush"
                                                TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Color_Primary}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" 
                                             Value="True">
                                <Setter Property="BorderBrush"
                                                TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Color_Primary_Light}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                             Value="False">
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                                 Opacity="0.38"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:WaterMarkTextHelper.HasText" 
                                               Value="False"/>
                                    <Condition Property="IsFocused" 
                                               Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Message"
                                        Property="Visibility"
                                        Value="Hidden"/>
                            </MultiTrigger>

                            <Trigger Property="local:WaterMarkTextHelper.HasText" 
                                     Value="True">
                                <Setter TargetName="Message"
                                        Property="Visibility"
                                        Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsFocused" 
                             Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                                 Opacity="0.87"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
                             Value="False">
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Color_OnBackground_OnSurface}"
                                                 Opacity="0.38"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WaterMarkTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="local:WaterMarkTextHelper.IsMonitoring" Value="True"/>
        <Setter Property="local:WaterMarkTextHelper.WatermarkText" Value="Username" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>

                        <Storyboard x:Key="enterHasText" >
                            <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText" >
                            <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Name="Bd" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="1" />
                            <TextBlock x:Name="Message" Text="{TemplateBinding local:WaterMarkTextHelper.WatermarkText}" FontStyle="Italic"
                                       Foreground="Gray" IsHitTestVisible="False" FontFamily="Calibri" Opacity="0.8" HorizontalAlignment="Left" VerticalAlignment="Center"
                                       Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:WaterMarkTextHelper.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="local:WaterMarkTextHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>